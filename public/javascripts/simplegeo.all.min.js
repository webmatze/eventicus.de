(function (u, k) {
	(function (r) {
		var e = u.simplegeo;
		if (e === k) e = {};
		if (e.Client === k) {
			e.Client = function (b, a) {
				if (!(this instanceof e.Client)) return new e.Client(b, a);
				a = a || {};
				this.token = b;
				this.options = a;
				this.host = a.host || "api.simplegeo.com";
				this.port = a.port || "80";
				this.apiUrl = "http://" + this.host + ":" + this.port;
				this.name = "Client"
			};
			var p = u.navigator;
			e.Client.prototype = {
				request: function (b, a, c) {
					a.token = this.token;
					a = r.param(a) + "&callback=?";
					r.ajax({
						url: this.apiUrl + b,
						dataType: "json",
						data: a,
						success: function (f) {
							if (f.error) {
								var g =
								Error(f.message);
								g.code = f.code;
								c(g)
							} else c(null, f.data)
						},
						error: function (f, g, n) {
							c(n)
						}
					})
				},
				getFeature: function (b, a, c) {
					if (c === k) {
						c = a;
						a = {}
					}
					return this.request("/1.0/features/" + b + ".json", a, c)
				},
				watchLocationFromBrowser: function (b, a) {
					if (a === k) {
						a = b;
						b = {}
					}
					p && p.geolocation ? p.geolocation.watchPosition(function (c) {
						//c.source = "navigator";
						a(null, c)
					}, function (c) {
						a(c)
					}, b) : a(Error("navigator.geolocation not available"))
				},
				getLocationFromBrowser: function (b, a) {
					if (a === k) {
						a = b;
						b = {}
					}
					p && p.geolocation ? p.geolocation.getCurrentPosition(function (c) {
						//c.source = "navigator";
						a(null, c)
					}, function (c) {
						a(c)
					}, b) : a(Error("navigator.geolocation not available"))
				},
				getLocationFromIP: function (b, a) {
					var c;
					if (a === k) {
						a = b;
						c = "/0.1/locate.json"
					} else c = "/0.1/locate/" + b + ".json";
					return this.request(c, {}, function (f, g) {
						f ? a(f) : a(null, {
							coords: {
								latitude: g.geometry.coordinates[1],
								longitude: g.geometry.coordinates[0],
								accuracy: 1E5
							},
							timestamp: new Date,
							source: "simplegeo"
						})
					})
				},
				getLocation: function (b, a) {
					var c = this;
					if (a === k) {
						a = b;
						b = {}
					}
					c.getLocationFromBrowser(b, function (f, g) {
						f ? c.getLocationFromIP(a) : a(null, g)
					})
				}
			}
		}
		e.StorageClient = function (b, a) {
			if (!(this instanceof e.StorageClient)) return new e.StorageClient(b, a);
			e.Client.call(this, b, a);
			this.name = "StorageClient"
		};
		e.StorageClient.prototype = new e.Client;
		var q = {
			record: "/0.1/records/layer/id.json",
			records: "/0.1/records/layer/ids.json",
			history: "/0.1/records/layer/id/history.json",
			nearby: "/0.1/records/layer/nearby/arg.json",
			nearbyAddress: "/0.1/nearby/address/lat,lon.json",
			densityDay: "/0.1/density/day/lat,lon.json",
			densityHour: "/0.1/density/day/hour/lat,lon.json"
		};
		e.StorageClient.prototype.getRecord = function (b, a, c) {
			path = q.record;
			path = path.replace("layer", b).replace("id", a);
			return this.request(path, {}, c)
		};
		e.StorageClient.prototype.getRecords = function (b, a, c) {
			path = q.records;
			idString = a.join(",");
			path = path.replace("layer", b).replace("ids", idString);
			return this.request(path, {}, c)
		};
		e.StorageClient.prototype.getHistory = function (b, a, c, f) {
			if (f === k) {
				f = c;
				c = {}
			}
			path = q.history;
			path = path.replace("layer", b).replace("id", a);
			return this.request(path, c, f)
		};
		e.StorageClient.prototype.getNearby =

		function (b, a, c, f, g) {
			if (g === k) {
				g = f;
				f = {}
			}
			path = q.nearby;
			path = path.replace("layer", b).replace("arg", a + "," + c);
			return this.request(path, f, g)
		};
		e.StorageClient.prototype.getNearbyGeohash = function (b, a, c, f) {
			if (f === k) {
				f = c;
				c = {}
			}
			path = q.nearby;
			path = path.replace("layer", b).replace("arg", a);
			return this.request(path, c, f)
		};
		e.StorageClient.prototype.getNearbyAddress = function (b, a, c) {
			path = q.nearbyAddress;
			path = path.replace("lat", b).replace("lon", a);
			return this.request(path, {}, c)
		};
		e.StorageClient.prototype.getDensity = function (b, a, c, f, g) {
			if (g === k) {
				g = f;
				path = q.densityDay;
				path = path.replace("day", c).replace("lat", b).replace("lon", a)
			} else {
				path = q.densityHour;
				path = path.replace("day", c).replace("hour", f).replace("lat", b).replace("lon", a)
			}
			return this.request(path, {}, g)
		};
		e.ContextClient = function (b, a) {
			if (!(this instanceof e.ContextClient)) return new e.ContextClient(b, a);
			e.Client.call(this, b, a);
			this.name = "ContextClient"
		};
		e.ContextClient.prototype = new e.Client;
		e.ContextClient.prototype.getContext = function (b, a, c) {
			return this.request("/1.0/context/" + b + "," + a + ".json", {}, c)
		};
		e.ContextClient.prototype.getContextFromIP = function (b, a) {
			if (a === k) {
				a = b;
				b = "ip"
			}
			return this.request("/1.0/context/" + b + ".json", {}, a)
		};
		e.ContextClient.prototype.getContextFromAddress = function (b, a) {
			return this.request("/1.0/context/address.json", {
				address: b
			}, a)
		};
		e.PlacesClient = function (b, a) {
			if (!(this instanceof e.PlacesClient)) return new e.PlacesClient(b, a);
			e.Client.call(this, b, a);
			this.name = "PlacesClient"
		};
		e.PlacesClient.prototype = new e.Client;
		e.PlacesClient.prototype.search = function (b, a, c, f) {
			if (f === k) {
				f = c;
				c = {}
			}
			var g = "/1.0/places/lat,lon.json";
			g = g.replace("lat", b).replace("lon", a);
			return this.request(g, c, f)
		};
		e.PlacesClient.prototype.searchFromIP = function (b, a, c) {
			if (arguments.length === 2) {
				c = a;
				if (b.trim) a = {};
				else {
					a = b;
					b = "ip"
				}
			} else if (arguments.length === 1) {
				c = b;
				b = "ip";
				a = {}
			}
			return this.request("/1.0/places/" + b + ".json", a, c)
		};
		e.PlacesClient.prototype.searchFromAddress = function (b, a, c) {
			if (c === k) {
				c = a;
				a = {}
			}
			a.address = b;
			return this.request("/1.0/places/address.json", a, c)
		};
		u.simplegeo = e
	})(function (r, e) {
		var p = r.document,
			q = (new Date).getTime(),
			b = /=\?(&|$)/,
			a = /(\?|&)_=.*?(&|$)/,
			c = /\?/,
			f = /%20/g,
			g = Object.prototype.toString,
			n = {
				isFunction: function (d) {
					return g.call(d) === "[object Function]"
				},
				isArray: function (d) {
					return g.call(d) === "[object Array]"
				},
				each: function (d, i, l) {
					var m, o = 0,
						j = d.length,
						h = j === e || n.isFunction(d);
					if (l) if (h) for (m in d) {
						if (i.apply(d[m], l) === false) break
					} else
					for (; o < j;) {
						if (i.apply(d[o++], l) === false) break
					} else if (h) for (m in d) {
						if (i.call(d[m], m, d[m]) === false) break
					} else
					for (l = d[0]; o < j && i.call(l, o, l) !== false; l = d[++o]);
					return d
				},
				param: function (d) {
					function i(j, h) {
						if (n.isArray(h)) n.each(h, function (t, s) {
							/\[\]$/.test(j) ? l(j, s) : i(j + "[" + (typeof s === "object" || n.isArray(s) ? t : "") + "]", s)
						});
						else h != null && typeof h === "object" ? n.each(h, function (t, s) {
							i(j + "[" + t + "]", s)
						}) : l(j, h)
					}
					function l(j, h) {
						h = n.isFunction(h) ? h() : h;
						m[m.length] = encodeURIComponent(j) + "=" + encodeURIComponent(h)
					}
					var m = [];
					if (n.isArray(d) || d.jquery) n.each(d, function () {
						l(this.name, this.value)
					});
					else
					for (var o in d) i(o, d[o]);
					return m.join("&").replace(f, "+")
				},
				ajax: function (d) {
					var i, l;
					if (d.data && typeof d.data !== "string") d.data = n.param(d.data);
					i = d.jsonpCallback || "jsonp" + q++;
					if (d.data) d.data = (d.data + "").replace(b, "=" + i + "$1");
					d.url = d.url.replace(b, "=" + i + "$1");
					r[i] = r[i] ||
					function (t) {
						l = t;
						d.success && d.success.call(d, l, void 0);
						d.complete && d.complete.call(d, e, void 0);
						r[i] = e;
						try {
							delete r[i]
						} catch (s) {}
						j && j.removeChild(h)
					};
					var m = (new Date).getTime(),
						o = d.url.replace(a, "$1_=" + m + "$2");
					d.url = o + (o === d.url ? (c.test(d.url) ? "&" : "?") + "_=" + m : "");
					d.url += (c.test(d.url) ? "&" : "?") + d.data;
					var j = p.getElementsByTagName("head")[0] || p.documentElement,
						h = p.createElement("script");
					h.src = d.url;
					j.insertBefore(h, j.firstChild);
					return e
				}
			};
		return n
	}(u))
})(window);